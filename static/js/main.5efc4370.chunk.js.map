{"version":3,"sources":["redux/threeSelector.js","redux/threeReducer.js","common/three/controlUnit.js","components/three/threeJS.js","redux/configReducer.js","redux/store.js","components/Header/Header.js","redux/configSelector.js","components/configBar/ConfigBar.js","App.js","serviceWorker.js","index.js","components/configBar/ConfigBar.module.css"],"names":["getBoxColor","state","three","boxColor","getActiveGeometry","activeGeometry","initialState","THREE","changeBoxColor","color","type","threeReducer","action","geometry","controlUnit","renderer","camera","changingMesh","SphereGeometry","material","MeshNormalMaterial","mesh","Mesh","this","dragObjects","window","obj","rightestX","count","vertices","forEach","v","x","console","log","position","push","dragControl","DragControls","domElement","addEventListener","startX","scale","set","endX","newScaleValue","ThreeScene","scene","width","height","antialias","props","cube","controlSphere","handleWindowResize","innerWidth","innerHeight","setSize","myDiv","parentElement","lastChild","setAttribute","aspect","updateProjectionMatrix","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","removeEventListener","y","renderScene","render","z","setClearColor","appendChild","add","removeChild","className","ref","mount","Component","connect","colors","geometrys","description","configReducer","reducers","combineReducers","config","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","getColors","getGeometrys","ConfigBar","colorsDivs","map","c","onClick","styles","itemsDiv","style","backgroundColor","geometryDivs","changeActiveGeometry","itemsContainer","React","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"4SAAWA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UACnCC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,gB,ikBCCpD,IAGIC,EAAe,CACfH,SAAU,UACVE,eAAgB,IAAIE,IAAkB,EAAG,EAAG,IAqBrCC,EAAiB,SAAAC,GAAK,MAAK,CAAEC,KA1Bf,kCA0BuCD,UAGjDE,EArBM,WAAmC,IAAlCV,EAAiC,uDAAzBK,EAAcM,EAAW,uCACnD,OAAQA,EAAOF,MACX,IAViB,kCAWb,OAAO,EAAP,GACOT,EADP,CAEIE,SAAUS,EAAOH,QAEzB,IAduB,wCAenB,OAAO,EAAP,GACOR,EADP,CAEII,eAAgBO,EAAOC,WAE/B,QACI,OAAOZ,I,gBCoCJa,EAtCX,WAAYC,EAAUC,EAAQC,GAAe,IAAD,gCAf5CJ,SAAW,IAAIK,IAAe,GAAK,GAAI,IAeK,KAd5CC,SAAW,IAAIC,IAc6B,KAb5CC,KAAO,IAAIC,IAAKC,KAAKV,SAAUU,KAAKJ,UAaQ,KAH5CK,YAAc,GAIVD,KAAKR,SAAWA,EAChBQ,KAAKP,OAASA,EACdO,KAAKN,aAAeA,EACpBQ,OAAOC,IAAMH,KAAKF,KAClB,IAAIM,EAAY,EACZC,EAAQ,EACZL,KAAKF,KAAKR,SAASgB,SAASC,SAAQ,SAAAC,GAChCH,IACGG,EAAEC,EAAEL,IACFA,EAAYI,EAAEC,EACdC,QAAQC,IAAIH,OAIrBE,QAAQC,IAAIP,EAAUC,GACtBL,KAAKF,KAAKc,SAASH,EAAc,GAAVL,EAEvBJ,KAAKC,YAAYY,KAAKb,KAAKF,MAC3BE,KAAKc,YAAc,IAAIC,IAAaf,KAAKC,YAAcD,KAAKP,OAASO,KAAKR,SAASwB,YACnFhB,KAAKc,YAAYG,iBAAiB,aAAY,WAC1C,EAAKC,OAAS,EAAKpB,KAAKc,SAASH,EACjC,EAAKX,KAAKqB,MAAMC,IAAI,IAAI,IAAI,QAEhCpB,KAAKc,YAAYG,iBAAiB,WAAU,WACxC,EAAKI,KAAO,EAAKvB,KAAKc,SAASH,EAC/B,EAAKX,KAAKqB,MAAMC,IAAI,EAAE,EAAE,GAExB,IAAIE,EAAgB,EAAK5B,aAAayB,MAAMV,EAAI,EAAKY,KAAO,EAAKH,OACjE,EAAKxB,aAAayB,MAAMC,IAAIE,EAAcA,EAAcA,OC1C9DC,E,2MAEFC,MAAQ,IAAIxC,I,EACZS,OAAS,IAAIT,IAAwB,GAAI,EAAKyC,MAAQ,EAAKC,OAAQ,GAAK,K,EACxElC,SAAW,IAAIR,IAAoB,CAAE2C,WAAW,I,EAChDrC,SAAW,EAAKsC,MAAM9C,e,EACtBc,SAAW,IAAIZ,IAAwB,CAAEE,MAAO,EAAK0C,MAAMhD,W,EAC3DiD,KAAO,IAAI7C,IAAW,EAAKM,SAAU,EAAKM,U,EAG1CkC,cAAgB,IAAIvC,EAAY,EAAKC,SAAW,EAAKC,OAAS,EAAKoC,M,EAuBnEE,mBAAqB,WACjB,IAAMN,EAA4B,IAAnBvB,OAAO8B,WAChBN,EAAWxB,OAAO+B,YAAc,MACtC,EAAKzC,SAAS0C,QAAQT,EAAOC,GAE7B,EAAKS,MAAMC,cAAcC,UAAUC,aAAa,QAAhD,gBAAoF,IAAnBpC,OAAO8B,WAAxE,OAEA,EAAKvC,OAAO8C,OAASd,EAAQC,EAC7B,EAAKjC,OAAO+C,0B,EAEhBC,MAAQ,WACC,EAAKC,UACN,EAAKA,QAAUC,sBAAsB,EAAKC,W,EAGlDC,KAAO,WACHC,qBAAqB,EAAKJ,SAC1BxC,OAAO6C,oBAAoB,SAAU,EAAKhB,qB,EAG9Ca,QAAU,WACN,EAAKd,cAAchC,KAAKc,SAASoC,EAAE,EACnC,EAAKC,cACL,EAAKP,QAAUxC,OAAOyC,sBAAsB,EAAKC,U,EAErDK,YAAc,WACV,EAAKzD,SAAS0D,OAAO,EAAK1B,MAAO,EAAK/B,S,mFA9CtCO,KAAKP,OAAOmB,SAASuC,EAAI,EACzBnD,KAAKR,SAAS4D,cAAc,WAC5BpD,KAAKmC,MAAMkB,YAAYrD,KAAKR,SAASwB,YACrChB,KAAKwB,MAAM8B,IAAItD,KAAK6B,MACpB7B,KAAKyC,QACLvC,OAAOe,iBAAiB,SAAUjB,KAAK+B,oBACvC/B,KAAK+B,qBAEL/B,KAAKwB,MAAM8B,IAAItD,KAAK8B,cAAchC,MAClCI,OAAOsB,MAAQxB,KAAKR,SACpBU,OAAO2B,KAAO7B,KAAKmC,Q,2CAGnBnC,KAAKJ,SAASV,MAAQ,IAAIF,IAAYgB,KAAK4B,MAAMhD,UACjDoB,KAAK6B,KAAKvC,SAAWU,KAAK4B,MAAM9C,iB,6CAGhCkB,KAAK6C,OACL7C,KAAKmC,MAAMoB,YAAYvD,KAAKR,SAASwB,c,+BA8B/B,IAAD,OACL,OACI,yBAAKwC,UAAU,UACXC,IAAK,SAACC,GAAY,EAAKvB,MAAQuB,S,GAhEtBC,aA0EVC,eALO,SAAAlF,GAAK,MAAK,CAC5BE,SAAUH,EAAYC,GACtBI,eAAgBD,EAAkBH,MAGE,CACpCO,kBADW2E,CAEZrC,G,wkBCjFH,IAAIxC,EAAa,CACb8E,OAAO,CACH,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,UAAW,CACP,CAACC,YAAc,OAASzE,SAAW,IAAIN,IAAkB,EAAG,EAAG,IAC/D,CAAC+E,YAAc,SAAWzE,SAAW,IAAIN,IAAqB,EAAG,GAAI,KACrE,CAAC+E,YAAc,OAASzE,SAAW,IAAIN,IAAmB,EAAG,EAAG,GAAI,KACpE,CAAC+E,YAAc,OAASzE,SAAW,IAAIN,IAAmB,GAAI,EAAE,GAAG,KACnE,CAAC+E,YAAc,WAAazE,SAAW,IAAIN,IAAuB,EAAE,EAAE,MAgB/DgF,EAXK,WAAoC,IAAnCtF,EAAkC,uDAA1BK,EAAeM,EAAW,uCACnD,OAAOA,EAAOF,MACV,IAAK,IACD,YACOT,GAEX,QACI,OAAOA,ICzBfuF,EAAYC,YAAgB,CAC5BvF,MAAQS,EACR+E,OAASH,IAGPI,EAAmBlE,OAAOmE,sCAAwCC,IAOzDC,EANDC,YAAYP,EACrBG,EACDK,YAAgBC,OCFLC,EARA,SAAC/C,GACZ,OACI,4BAAS4B,UAAU,UACf,8C,gBCNDoB,EAAY,SAAAlG,GAAK,OAAIA,EAAMyF,OAAON,QAClCgB,EAAe,SAAAnG,GAAK,OAAIA,EAAMyF,OAAOL,WCK1CgB,E,2MAEFC,WAAa,EAAKnD,MAAMiC,OAAOmB,KAAI,SAAAC,GAAC,OAChC,yBAAKC,QAAS,WAAQ,EAAKtD,MAAM3C,eAAegG,IAC5CzB,UAAW2B,IAAOC,SAClBC,MAAO,CAAEC,gBAAiBL,Q,EAGlCM,aAAe,EAAK3D,MAAMkC,UAAUkB,KAAI,SAAAC,GAAC,OACrC,yBAAKC,QAAS,WAAQ,EAAKtD,MAAM4D,qBAAqBP,EAAE3F,WACpDkE,UAAW2B,IAAOC,UACxBH,EAAElB,gB,wEAIA,OACI,yBAAKP,UAAU,aACX,yCACA,6BACI,4CACA,yBAAKA,UAAW2B,IAAOM,gBAClBzF,KAAKuF,eAGd,6BACA,yBAAK/B,UAAW2B,IAAOM,gBAClBzF,KAAK+E,iB,GA1BFW,IAAM/B,WAsCfC,eALO,SAAAlF,GAAK,MAAK,CAC5BmF,OAAQe,EAAUlG,GAClBoF,UAAWe,EAAanG,MAGY,CACpCO,iBACAuG,qBPjB8B,SAAAlG,GAAQ,MAAK,CAAEH,KA1BlB,wCA0BgDG,cOehEsE,CAGZkB,GC1BYa,MAbf,WAEE,OACE,kBAAC,IAAD,CAAUpB,MAAOA,GACf,yBAAKf,UAAU,cACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCHcoC,QACW,cAA7B1F,OAAO2F,SAASC,UAEe,UAA7B5F,OAAO2F,SAASC,UAEhB5F,OAAO2F,SAASC,SAASC,MACvB,2DCTNC,IAAS9C,OAAO,kBAAC,EAAD,MAAS+C,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBElInBC,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,SAAW,+B","file":"static/js/main.5efc4370.chunk.js","sourcesContent":["export let getBoxColor = state => state.three.boxColor\r\nexport let getActiveGeometry = state => state.three.activeGeometry","import * as THREE from 'three';\r\n\r\nconst CHANGE_BOX_COLOR = './threeReducer/CHANGE_BOX_COLOR'\r\nconst CHANGE_ACTIVE_GEOMETRY = './threeReducer/CHANGE_ACTIVE_GEOMETRY'\r\n\r\nlet initialState = {\r\n    boxColor: '#f45612',\r\n    activeGeometry: new THREE.BoxGeometry(1, 1, 1)\r\n}\r\n\r\nconst threeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_BOX_COLOR:\r\n            return {\r\n                ...state,\r\n                boxColor: action.color\r\n            }\r\n        case CHANGE_ACTIVE_GEOMETRY:\r\n            return {\r\n                ...state,\r\n                activeGeometry: action.geometry\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creators\r\nexport let changeBoxColor = color => ({ type: CHANGE_BOX_COLOR, color })\r\nexport let changeActiveGeometry = geometry => ({ type: CHANGE_ACTIVE_GEOMETRY, geometry })\r\n\r\nexport default threeReducer","import {SphereGeometry,MeshNormalMaterial,Mesh,Raycaster,Vector2} from 'three'\r\nimport { DragControls  } from '../../../node_modules/three/examples/jsm/controls/DragControls.js'\r\n\r\n\r\nclass controlUnit {\r\n\r\n    geometry = new SphereGeometry(0.1, 15, 15)\r\n    material = new MeshNormalMaterial()\r\n    mesh = new Mesh(this.geometry, this.material)\r\n\r\n    // raycaster = new Raycaster()\r\n    // mouse = new Vector2()\r\n\r\n    //Props\r\n    renderer;camera;changingMesh\r\n    //Darg and Drop\r\n    // kept = false\r\n    dragControl\r\n    dragObjects = []\r\n    startX;endX\r\n\r\n    constructor(renderer, camera, changingMesh) {\r\n        this.renderer = renderer\r\n        this.camera = camera\r\n        this.changingMesh = changingMesh\r\n        window.obj = this.mesh\r\n        let rightestX = 0\r\n        let count = 0\r\n        this.mesh.geometry.vertices.forEach(v => {\r\n            count++\r\n            if(v.x>rightestX){\r\n                 rightestX = v.x\r\n                 console.log(v)\r\n            }\r\n               \r\n        })\r\n        console.log(rightestX,count)\r\n        this.mesh.position.x = rightestX*10 \r\n\r\n        this.dragObjects.push(this.mesh)\r\n        this.dragControl = new DragControls(this.dragObjects , this.camera , this.renderer.domElement)\r\n        this.dragControl.addEventListener('dragstart',()=>{\r\n            this.startX = this.mesh.position.x\r\n            this.mesh.scale.set(1.2,1.2,1.2)\r\n        })\r\n        this.dragControl.addEventListener('dragend',()=>{\r\n            this.endX = this.mesh.position.x\r\n            this.mesh.scale.set(1,1,1)\r\n\r\n            let newScaleValue = this.changingMesh.scale.x + this.endX - this.startX\r\n            this.changingMesh.scale.set(newScaleValue,newScaleValue,newScaleValue)\r\n        })\r\n\r\n        // window.addEventListener('mousedown', this.onDocumentMouseDown.bind(this), false)\r\n        // window.addEventListener('mouseup', this.onDocumentMouseUp.bind(this), false)\r\n    }\r\n    \r\n}\r\n\r\nexport default controlUnit","import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport { connect } from 'react-redux'\r\nimport { getBoxColor, getActiveGeometry } from '../../redux/threeSelector';\r\nimport { changeBoxColor } from '../../redux/threeReducer';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport controlUnit from '../../common/three/controlUnit';\r\n\r\nclass ThreeScene extends Component {\r\n\r\n    scene = new THREE.Scene()\r\n    camera = new THREE.PerspectiveCamera(75, this.width / this.height, 0.1, 1000)\r\n    renderer = new THREE.WebGLRenderer({ antialias: true })\r\n    geometry = this.props.activeGeometry\r\n    material = new THREE.MeshBasicMaterial({ color: this.props.boxColor })\r\n    cube = new THREE.Mesh(this.geometry, this.material)\r\n    // controls = new OrbitControls(this.camera)\r\n\r\n    controlSphere = new controlUnit(this.renderer , this.camera , this.cube)\r\n\r\n    componentDidMount() {\r\n        this.camera.position.z = 4\r\n        this.renderer.setClearColor('#fffff3')\r\n        this.myDiv.appendChild(this.renderer.domElement)\r\n        this.scene.add(this.cube)\r\n        this.start()\r\n        window.addEventListener(\"resize\", this.handleWindowResize)\r\n        this.handleWindowResize()\r\n\r\n        this.scene.add(this.controlSphere.mesh)\r\n        window.scene = this.renderer\r\n        window.cube = this.myDiv\r\n    }\r\n    componentDidUpdate() {\r\n        this.material.color = new THREE.Color(this.props.boxColor)\r\n        this.cube.geometry = this.props.activeGeometry\r\n    }\r\n    componentWillUnmount() {\r\n        this.stop()\r\n        this.myDiv.removeChild(this.renderer.domElement)\r\n    }\r\n    handleWindowResize = () => {\r\n        const width =  window.innerWidth *0.75\r\n        const height =   window.innerHeight - 85.88\r\n        this.renderer.setSize(width, height)\r\n\r\n        this.myDiv.parentElement.lastChild.setAttribute(\"style\",`width:${window.innerWidth *0.25}px`)\r\n        \r\n        this.camera.aspect = width / height\r\n        this.camera.updateProjectionMatrix()\r\n    }\r\n    start = () => {\r\n        if (!this.frameId) {\r\n            this.frameId = requestAnimationFrame(this.animate)\r\n        }\r\n    }\r\n    stop = () => {\r\n        cancelAnimationFrame(this.frameId)\r\n        window.removeEventListener(\"resize\", this.handleWindowResize)\r\n        // this.controls.dispose()\r\n    }\r\n    animate = () => {\r\n        this.controlSphere.mesh.position.y=0\r\n        this.renderScene()\r\n        this.frameId = window.requestAnimationFrame(this.animate)\r\n    }\r\n    renderScene = () => {\r\n        this.renderer.render(this.scene, this.camera)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content\"\r\n                ref={(mount) => { this.myDiv = mount }} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    boxColor: getBoxColor(state),\r\n    activeGeometry: getActiveGeometry(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeBoxColor\r\n})(ThreeScene)","import * as THREE from 'three';\r\n\r\n\r\nlet initialState={\r\n    colors:[\r\n        \"#ffff00\",\r\n        \"#fffff8\",\r\n        \"#f92560\",\r\n        \"#ff0000\",\r\n        \"#000000\",\r\n        \"#ffff99\",\r\n        '#ff4568'\r\n    ],\r\n    geometrys: [\r\n        {description : \"Cube\" , geometry : new THREE.BoxGeometry(1, 1, 1)},\r\n        {description : \"Sphere\" , geometry : new THREE.SphereGeometry(1, 15, 15)},\r\n        {description : \"Cone\" , geometry : new THREE.ConeGeometry(1, 2, 15, 15)},\r\n        {description : \"Ring\" , geometry : new THREE.RingGeometry(0.5,1,15,15)},\r\n        {description : \"Cylinder\" , geometry : new THREE.CylinderGeometry(1,1,2)},\r\n\r\n    ]\r\n}\r\n\r\nlet configReducer = (state = initialState , action) => {\r\n    switch(action.type){\r\n        case 'C' :\r\n            return{\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default configReducer","import {combineReducers, createStore, compose, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport threeReducer from './threeReducer';\r\nimport configReducer from './configReducer';\r\n\r\nlet reducers =  combineReducers({\r\n    three : threeReducer,\r\n    config : configReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers\r\n    ,composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  ))\r\n// let store = createStore(reducers)\r\n\r\nexport default store","import React from 'react'\r\n// import './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header  className=\"header\">\r\n            <h1>Configurator</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","export let getColors = state => state.config.colors\r\nexport let getGeometrys = state => state.config.geometrys\r\n\r\n","import React from 'react'\r\nimport styles from './ConfigBar.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { getColors, getGeometrys } from '../../redux/configSelector'\r\nimport { changeBoxColor, changeActiveGeometry } from '../../redux/threeReducer'\r\n\r\nclass ConfigBar extends React.Component {\r\n\r\n    colorsDivs = this.props.colors.map(c =>\r\n        <div onClick={() => { this.props.changeBoxColor(c) }}\r\n            className={styles.itemsDiv}\r\n            style={{ backgroundColor: c }}>\r\n        </div>)\r\n\r\n    geometryDivs = this.props.geometrys.map(c =>\r\n        <div onClick={() => { this.props.changeActiveGeometry(c.geometry) }}\r\n            className={styles.itemsDiv}\r\n    >{c.description}\r\n        </div>)\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"configBar\">\r\n                <h2>ConfigBar</h2>\r\n                <div>\r\n                    <h2>Select Model</h2>\r\n                    <div className={styles.itemsContainer}>\r\n                        {this.geometryDivs}\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className={styles.itemsContainer}>\r\n                    {this.colorsDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    colors: getColors(state),\r\n    geometrys: getGeometrys(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeBoxColor,\r\n    changeActiveGeometry\r\n})(ConfigBar)","import React from 'react';\r\nimport './App.css';\r\nimport ThreeScene from './components/three/threeJS';\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux'\r\nimport Header from './components/Header/Header';\r\nimport ConfigBar from './components/configBar/ConfigBar';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"appWrapper\">\r\n      <Header/>\r\n      <ThreeScene/>\r\n      <ConfigBar/>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n// let threeObj = new ThreeJS()\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// animate();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsContainer\":\"ConfigBar_itemsContainer__3kfy9\",\"itemsDiv\":\"ConfigBar_itemsDiv__3lvrK\"};"],"sourceRoot":""}